{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAExC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAS,CAAET,WAAUC,SACvBK,EAEFH,EAAQM,GAGRL,EAAOK,E,GAERR,E,IAIPR,EAAOiB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOlB,EAAQmB,OAC1BC,EAAYF,OAAOjB,EAAOkB,OAC1BE,EAAcH,OAAOhB,EAASiB,OACpCtB,EAAOyB,QAEP,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCpB,EAAcoB,EAAGN,GACdO,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA/B,GAASgC,OAAOC,QAAQ,qBAAoCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEnEyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA/B,GAASgC,OAAOI,QAAQ,oBAAmCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGrEY,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const result = { position, delay };\n      if (shouldResolve) {\n        // Fulfill\n        resolve(result);\n      } else {\n        // Reject\n        reject(result);\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let delayValue = Number(delayEl.value);\n  const stepValue = Number(stepEl.value);\n  const amountValue = Number(amountEl.value);\n  formEl.reset();\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue) //\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`); //\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`); //\n      });\n\n    delayValue += stepValue;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","result","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","reset","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.6bce5fb8.js.map"}