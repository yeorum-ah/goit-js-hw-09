{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAExC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAS,C,SAAET,E,MAAUC,GACvBK,EAEFH,EAAQM,GAGRL,EAAOK,EAAO,GAEfR,EAAM,G,CAIbR,EAAOiB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOlB,EAAQmB,OAChC,MAAMC,EAAYF,OAAOjB,EAAOkB,OAC1BE,EAAcH,OAAOhB,EAASiB,OACpCtB,EAAOyB,QAEP,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCpB,EAAcoB,EAAGN,GACdO,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAqBvB,QAAeC,MAAU,IAEvEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAA9B,GAAS+B,OAAOG,QAAQ,oBAAoBzB,QAAeC,MAAU,IAGzEY,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const result = { position, delay };\n      if (shouldResolve) {\n        // Fulfill\n        resolve(result);\n      } else {\n        // Reject\n        reject(result);\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let delayValue = Number(delayEl.value);\n  const stepValue = Number(stepEl.value);\n  const amountValue = Number(amountEl.value);\n  formEl.reset();\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue) //\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`); //\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`); //\n      });\n\n    delayValue += stepValue;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","result","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","reset","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e6637724.js.map"}